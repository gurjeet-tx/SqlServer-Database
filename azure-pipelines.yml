# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

# steps:
# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: ArchiveFiles@2
#   inputs:
#     rootFolderOrFile: '$(Build.BinariesDirectory)'
#     includeRootFolder: true
#     archiveType: 'zip'
#     archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#     replaceExistingArchive: true

# - task: DownloadBuildArtifacts@0
#   inputs:
#     buildType: 'current'
#     downloadType: 'single'
#     downloadPath: '$(System.ArtifactsDirectory)'
#     allowPartiallySucceededBuilds: 

stages:
- stage: Nuget_Installation
  jobs:
  - job:
    displayName: 'Nuget tool installation'
    steps:
    - task: NuGetToolInstaller@1
        
  - job: 
    displayName: 'Nuget command solution'
    steps:
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

- stage: VS_Build
  jobs:
  - job:
    displayName: 'Building using VS Build'
    steps:
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

- stage: Building_Archive
  jobs:
  - job: 
    displayName: 'Building archive'
    steps:
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

- stage: Downloading_Artifact
  jobs:
  - job: 
    displayName: 'Downloading Artifacts'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        downloadPath: '$(System.ArtifactsDirectory)'